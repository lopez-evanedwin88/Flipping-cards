// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders MainScreen component correctly 1`] = `
<View>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "row",
        "marginVertical": 8,
      }
    }
  >
    <View>
      <View
        accessibilityRole="button"
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Restart
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "flex-end",
          "marginRight": 8,
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 20,
            "fontWeight": "500",
          }
        }
      >
        STEPS: 
      </Text>
      <Text
        style={
          Array [
            Object {
              "fontSize": 20,
              "fontWeight": "500",
            },
            Object {
              "color": "blue",
            },
          ]
        }
      >
        0
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "row",
        "flexWrap": "wrap",
      }
    }
  >
    <View
      collapsable={false}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "height": 170,
          "margin": 4,
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": 120,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 100,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": 800,
              },
              Object {
                "rotateY": "0deg",
              },
            ],
            "zIndex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "cornflowerblue",
              "borderColor": "black",
              "borderRadius": 5,
              "borderWidth": 1.5,
              "height": 170,
              "justifyContent": "center",
              "shadowColor": "rgba(0,0,0,0.5)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.5,
              "width": 120,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#ffffff",
                "fontFamily": "System",
                "fontSize": 25,
                "textAlign": "center",
              }
            }
          >
            ?
          </Text>
        </View>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": -800,
              },
              Object {
                "rotateY": "180deg",
              },
            ],
            "zIndex": 0,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "cornflowerblue",
                "borderColor": "black",
                "borderRadius": 5,
                "borderWidth": 1.5,
                "height": 170,
                "justifyContent": "center",
                "shadowColor": "rgba(0,0,0,0.5)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.5,
                "width": 120,
              },
              Object {
                "backgroundColor": "whitesmoke",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#ffffff",
                  "fontFamily": "System",
                  "fontSize": 25,
                  "textAlign": "center",
                },
                Object {
                  "color": "black",
                },
              ]
            }
          >
            88
          </Text>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "height": 170,
          "margin": 4,
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": 120,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 100,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": 800,
              },
              Object {
                "rotateY": "0deg",
              },
            ],
            "zIndex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "cornflowerblue",
              "borderColor": "black",
              "borderRadius": 5,
              "borderWidth": 1.5,
              "height": 170,
              "justifyContent": "center",
              "shadowColor": "rgba(0,0,0,0.5)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.5,
              "width": 120,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#ffffff",
                "fontFamily": "System",
                "fontSize": 25,
                "textAlign": "center",
              }
            }
          >
            ?
          </Text>
        </View>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": -800,
              },
              Object {
                "rotateY": "180deg",
              },
            ],
            "zIndex": 0,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "cornflowerblue",
                "borderColor": "black",
                "borderRadius": 5,
                "borderWidth": 1.5,
                "height": 170,
                "justifyContent": "center",
                "shadowColor": "rgba(0,0,0,0.5)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.5,
                "width": 120,
              },
              Object {
                "backgroundColor": "whitesmoke",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#ffffff",
                  "fontFamily": "System",
                  "fontSize": 25,
                  "textAlign": "center",
                },
                Object {
                  "color": "black",
                },
              ]
            }
          >
            98
          </Text>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "height": 170,
          "margin": 4,
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": 120,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 100,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": 800,
              },
              Object {
                "rotateY": "0deg",
              },
            ],
            "zIndex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "cornflowerblue",
              "borderColor": "black",
              "borderRadius": 5,
              "borderWidth": 1.5,
              "height": 170,
              "justifyContent": "center",
              "shadowColor": "rgba(0,0,0,0.5)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.5,
              "width": 120,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#ffffff",
                "fontFamily": "System",
                "fontSize": 25,
                "textAlign": "center",
              }
            }
          >
            ?
          </Text>
        </View>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": -800,
              },
              Object {
                "rotateY": "180deg",
              },
            ],
            "zIndex": 0,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "cornflowerblue",
                "borderColor": "black",
                "borderRadius": 5,
                "borderWidth": 1.5,
                "height": 170,
                "justifyContent": "center",
                "shadowColor": "rgba(0,0,0,0.5)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.5,
                "width": 120,
              },
              Object {
                "backgroundColor": "whitesmoke",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#ffffff",
                  "fontFamily": "System",
                  "fontSize": 25,
                  "textAlign": "center",
                },
                Object {
                  "color": "black",
                },
              ]
            }
          >
            82
          </Text>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "height": 170,
          "margin": 4,
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": 120,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 100,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": 800,
              },
              Object {
                "rotateY": "0deg",
              },
            ],
            "zIndex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "cornflowerblue",
              "borderColor": "black",
              "borderRadius": 5,
              "borderWidth": 1.5,
              "height": 170,
              "justifyContent": "center",
              "shadowColor": "rgba(0,0,0,0.5)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.5,
              "width": 120,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#ffffff",
                "fontFamily": "System",
                "fontSize": 25,
                "textAlign": "center",
              }
            }
          >
            ?
          </Text>
        </View>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": -800,
              },
              Object {
                "rotateY": "180deg",
              },
            ],
            "zIndex": 0,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "cornflowerblue",
                "borderColor": "black",
                "borderRadius": 5,
                "borderWidth": 1.5,
                "height": 170,
                "justifyContent": "center",
                "shadowColor": "rgba(0,0,0,0.5)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.5,
                "width": 120,
              },
              Object {
                "backgroundColor": "whitesmoke",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#ffffff",
                  "fontFamily": "System",
                  "fontSize": 25,
                  "textAlign": "center",
                },
                Object {
                  "color": "black",
                },
              ]
            }
          >
            98
          </Text>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "height": 170,
          "margin": 4,
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": 120,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 100,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": 800,
              },
              Object {
                "rotateY": "0deg",
              },
            ],
            "zIndex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "cornflowerblue",
              "borderColor": "black",
              "borderRadius": 5,
              "borderWidth": 1.5,
              "height": 170,
              "justifyContent": "center",
              "shadowColor": "rgba(0,0,0,0.5)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.5,
              "width": 120,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#ffffff",
                "fontFamily": "System",
                "fontSize": 25,
                "textAlign": "center",
              }
            }
          >
            ?
          </Text>
        </View>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": -800,
              },
              Object {
                "rotateY": "180deg",
              },
            ],
            "zIndex": 0,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "cornflowerblue",
                "borderColor": "black",
                "borderRadius": 5,
                "borderWidth": 1.5,
                "height": 170,
                "justifyContent": "center",
                "shadowColor": "rgba(0,0,0,0.5)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.5,
                "width": 120,
              },
              Object {
                "backgroundColor": "whitesmoke",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#ffffff",
                  "fontFamily": "System",
                  "fontSize": 25,
                  "textAlign": "center",
                },
                Object {
                  "color": "black",
                },
              ]
            }
          >
            57
          </Text>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "height": 170,
          "margin": 4,
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": 120,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 100,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": 800,
              },
              Object {
                "rotateY": "0deg",
              },
            ],
            "zIndex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "cornflowerblue",
              "borderColor": "black",
              "borderRadius": 5,
              "borderWidth": 1.5,
              "height": 170,
              "justifyContent": "center",
              "shadowColor": "rgba(0,0,0,0.5)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.5,
              "width": 120,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#ffffff",
                "fontFamily": "System",
                "fontSize": 25,
                "textAlign": "center",
              }
            }
          >
            ?
          </Text>
        </View>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": -800,
              },
              Object {
                "rotateY": "180deg",
              },
            ],
            "zIndex": 0,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "cornflowerblue",
                "borderColor": "black",
                "borderRadius": 5,
                "borderWidth": 1.5,
                "height": 170,
                "justifyContent": "center",
                "shadowColor": "rgba(0,0,0,0.5)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.5,
                "width": 120,
              },
              Object {
                "backgroundColor": "whitesmoke",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#ffffff",
                  "fontFamily": "System",
                  "fontSize": 25,
                  "textAlign": "center",
                },
                Object {
                  "color": "black",
                },
              ]
            }
          >
            57
          </Text>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "height": 170,
          "margin": 4,
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": 120,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 100,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": 800,
              },
              Object {
                "rotateY": "0deg",
              },
            ],
            "zIndex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "cornflowerblue",
              "borderColor": "black",
              "borderRadius": 5,
              "borderWidth": 1.5,
              "height": 170,
              "justifyContent": "center",
              "shadowColor": "rgba(0,0,0,0.5)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.5,
              "width": 120,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#ffffff",
                "fontFamily": "System",
                "fontSize": 25,
                "textAlign": "center",
              }
            }
          >
            ?
          </Text>
        </View>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": -800,
              },
              Object {
                "rotateY": "180deg",
              },
            ],
            "zIndex": 0,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "cornflowerblue",
                "borderColor": "black",
                "borderRadius": 5,
                "borderWidth": 1.5,
                "height": 170,
                "justifyContent": "center",
                "shadowColor": "rgba(0,0,0,0.5)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.5,
                "width": 120,
              },
              Object {
                "backgroundColor": "whitesmoke",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#ffffff",
                  "fontFamily": "System",
                  "fontSize": 25,
                  "textAlign": "center",
                },
                Object {
                  "color": "black",
                },
              ]
            }
          >
            59
          </Text>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "height": 170,
          "margin": 4,
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": 120,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 100,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": 800,
              },
              Object {
                "rotateY": "0deg",
              },
            ],
            "zIndex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "cornflowerblue",
              "borderColor": "black",
              "borderRadius": 5,
              "borderWidth": 1.5,
              "height": 170,
              "justifyContent": "center",
              "shadowColor": "rgba(0,0,0,0.5)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.5,
              "width": 120,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#ffffff",
                "fontFamily": "System",
                "fontSize": 25,
                "textAlign": "center",
              }
            }
          >
            ?
          </Text>
        </View>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": -800,
              },
              Object {
                "rotateY": "180deg",
              },
            ],
            "zIndex": 0,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "cornflowerblue",
                "borderColor": "black",
                "borderRadius": 5,
                "borderWidth": 1.5,
                "height": 170,
                "justifyContent": "center",
                "shadowColor": "rgba(0,0,0,0.5)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.5,
                "width": 120,
              },
              Object {
                "backgroundColor": "whitesmoke",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#ffffff",
                  "fontFamily": "System",
                  "fontSize": 25,
                  "textAlign": "center",
                },
                Object {
                  "color": "black",
                },
              ]
            }
          >
            4
          </Text>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "height": 170,
          "margin": 4,
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": 120,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 100,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": 800,
              },
              Object {
                "rotateY": "0deg",
              },
            ],
            "zIndex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "cornflowerblue",
              "borderColor": "black",
              "borderRadius": 5,
              "borderWidth": 1.5,
              "height": 170,
              "justifyContent": "center",
              "shadowColor": "rgba(0,0,0,0.5)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.5,
              "width": 120,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#ffffff",
                "fontFamily": "System",
                "fontSize": 25,
                "textAlign": "center",
              }
            }
          >
            ?
          </Text>
        </View>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": -800,
              },
              Object {
                "rotateY": "180deg",
              },
            ],
            "zIndex": 0,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "cornflowerblue",
                "borderColor": "black",
                "borderRadius": 5,
                "borderWidth": 1.5,
                "height": 170,
                "justifyContent": "center",
                "shadowColor": "rgba(0,0,0,0.5)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.5,
                "width": 120,
              },
              Object {
                "backgroundColor": "whitesmoke",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#ffffff",
                  "fontFamily": "System",
                  "fontSize": 25,
                  "textAlign": "center",
                },
                Object {
                  "color": "black",
                },
              ]
            }
          >
            88
          </Text>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "height": 170,
          "margin": 4,
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": 120,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 100,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": 800,
              },
              Object {
                "rotateY": "0deg",
              },
            ],
            "zIndex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "cornflowerblue",
              "borderColor": "black",
              "borderRadius": 5,
              "borderWidth": 1.5,
              "height": 170,
              "justifyContent": "center",
              "shadowColor": "rgba(0,0,0,0.5)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.5,
              "width": 120,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#ffffff",
                "fontFamily": "System",
                "fontSize": 25,
                "textAlign": "center",
              }
            }
          >
            ?
          </Text>
        </View>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": -800,
              },
              Object {
                "rotateY": "180deg",
              },
            ],
            "zIndex": 0,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "cornflowerblue",
                "borderColor": "black",
                "borderRadius": 5,
                "borderWidth": 1.5,
                "height": 170,
                "justifyContent": "center",
                "shadowColor": "rgba(0,0,0,0.5)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.5,
                "width": 120,
              },
              Object {
                "backgroundColor": "whitesmoke",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#ffffff",
                  "fontFamily": "System",
                  "fontSize": 25,
                  "textAlign": "center",
                },
                Object {
                  "color": "black",
                },
              ]
            }
          >
            59
          </Text>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "height": 170,
          "margin": 4,
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": 120,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 100,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": 800,
              },
              Object {
                "rotateY": "0deg",
              },
            ],
            "zIndex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "cornflowerblue",
              "borderColor": "black",
              "borderRadius": 5,
              "borderWidth": 1.5,
              "height": 170,
              "justifyContent": "center",
              "shadowColor": "rgba(0,0,0,0.5)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.5,
              "width": 120,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#ffffff",
                "fontFamily": "System",
                "fontSize": 25,
                "textAlign": "center",
              }
            }
          >
            ?
          </Text>
        </View>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": -800,
              },
              Object {
                "rotateY": "180deg",
              },
            ],
            "zIndex": 0,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "cornflowerblue",
                "borderColor": "black",
                "borderRadius": 5,
                "borderWidth": 1.5,
                "height": 170,
                "justifyContent": "center",
                "shadowColor": "rgba(0,0,0,0.5)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.5,
                "width": 120,
              },
              Object {
                "backgroundColor": "whitesmoke",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#ffffff",
                  "fontFamily": "System",
                  "fontSize": 25,
                  "textAlign": "center",
                },
                Object {
                  "color": "black",
                },
              ]
            }
          >
            82
          </Text>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "height": 170,
          "margin": 4,
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": 120,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 100,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": 800,
              },
              Object {
                "rotateY": "0deg",
              },
            ],
            "zIndex": 1,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "cornflowerblue",
              "borderColor": "black",
              "borderRadius": 5,
              "borderWidth": 1.5,
              "height": 170,
              "justifyContent": "center",
              "shadowColor": "rgba(0,0,0,0.5)",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.5,
              "width": 120,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#ffffff",
                "fontFamily": "System",
                "fontSize": 25,
                "textAlign": "center",
              }
            }
          >
            ?
          </Text>
        </View>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "flex": 1,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "perspective": -800,
              },
              Object {
                "rotateY": "180deg",
              },
            ],
            "zIndex": 0,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "cornflowerblue",
                "borderColor": "black",
                "borderRadius": 5,
                "borderWidth": 1.5,
                "height": 170,
                "justifyContent": "center",
                "shadowColor": "rgba(0,0,0,0.5)",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.5,
                "width": 120,
              },
              Object {
                "backgroundColor": "whitesmoke",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#ffffff",
                  "fontFamily": "System",
                  "fontSize": 25,
                  "textAlign": "center",
                },
                Object {
                  "color": "black",
                },
              ]
            }
          >
            4
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
